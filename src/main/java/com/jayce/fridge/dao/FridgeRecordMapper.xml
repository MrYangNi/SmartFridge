<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jayce.fridge.dao.FridgeRecordMapper">
  <resultMap id="BaseResultMap" type="com.jayce.fridge.pojo.FridgeRecord">
    <id column="record_id" jdbcType="BIGINT" property="recordId" />
    <result column="fridge_id" jdbcType="BIGINT" property="fridgeId" />
    <result column="food_id" jdbcType="BIGINT" property="foodId" />
    <result column="operation" jdbcType="INTEGER" property="operation" />
    <result column="operate_time" jdbcType="TIMESTAMP" property="operateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    record_id, fridge_id, food_id, operation, operate_time
  </sql>
  <select id="selectByExample" parameterType="com.jayce.fridge.pojo.FridgeRecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from his_fridge_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from his_fridge_record
    where record_id = #{recordId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from his_fridge_record
    where record_id = #{recordId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.jayce.fridge.pojo.FridgeRecordExample">
    delete from his_fridge_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jayce.fridge.pojo.FridgeRecord">
    insert into his_fridge_record (record_id, fridge_id, food_id, 
      operation, operate_time)
    values (#{recordId,jdbcType=BIGINT}, #{fridgeId,jdbcType=BIGINT}, #{foodId,jdbcType=BIGINT}, 
      #{operation,jdbcType=INTEGER}, #{operateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.jayce.fridge.pojo.FridgeRecord">
    insert into his_fridge_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="recordId != null">
        record_id,
      </if>
      <if test="fridgeId != null">
        fridge_id,
      </if>
      <if test="foodId != null">
        food_id,
      </if>
      <if test="operation != null">
        operation,
      </if>
      <if test="operateTime != null">
        operate_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="recordId != null">
        #{recordId,jdbcType=BIGINT},
      </if>
      <if test="fridgeId != null">
        #{fridgeId,jdbcType=BIGINT},
      </if>
      <if test="foodId != null">
        #{foodId,jdbcType=BIGINT},
      </if>
      <if test="operation != null">
        #{operation,jdbcType=INTEGER},
      </if>
      <if test="operateTime != null">
        #{operateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jayce.fridge.pojo.FridgeRecordExample" resultType="java.lang.Long">
    select count(*) from his_fridge_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update his_fridge_record
    <set>
      <if test="record.recordId != null">
        record_id = #{record.recordId,jdbcType=BIGINT},
      </if>
      <if test="record.fridgeId != null">
        fridge_id = #{record.fridgeId,jdbcType=BIGINT},
      </if>
      <if test="record.foodId != null">
        food_id = #{record.foodId,jdbcType=BIGINT},
      </if>
      <if test="record.operation != null">
        operation = #{record.operation,jdbcType=INTEGER},
      </if>
      <if test="record.operateTime != null">
        operate_time = #{record.operateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update his_fridge_record
    set record_id = #{record.recordId,jdbcType=BIGINT},
      fridge_id = #{record.fridgeId,jdbcType=BIGINT},
      food_id = #{record.foodId,jdbcType=BIGINT},
      operation = #{record.operation,jdbcType=INTEGER},
      operate_time = #{record.operateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jayce.fridge.pojo.FridgeRecord">
    update his_fridge_record
    <set>
      <if test="fridgeId != null">
        fridge_id = #{fridgeId,jdbcType=BIGINT},
      </if>
      <if test="foodId != null">
        food_id = #{foodId,jdbcType=BIGINT},
      </if>
      <if test="operation != null">
        operation = #{operation,jdbcType=INTEGER},
      </if>
      <if test="operateTime != null">
        operate_time = #{operateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where record_id = #{recordId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jayce.fridge.pojo.FridgeRecord">
    update his_fridge_record
    set fridge_id = #{fridgeId,jdbcType=BIGINT},
      food_id = #{foodId,jdbcType=BIGINT},
      operation = #{operation,jdbcType=INTEGER},
      operate_time = #{operateTime,jdbcType=TIMESTAMP}
    where record_id = #{recordId,jdbcType=BIGINT}
  </update>
</mapper>